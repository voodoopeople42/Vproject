-- Внимание! Во всех результирующих выборках должны быть учтены все записи, даже
-- те, которые содержать NULL поля, однако, склейка не должна быть NULL записью!
-- Для этого используйте либо CASE, либо функцию 
-- ISNULL(<выражение>, <значение по умолчанию>) -- Microsoft SQL Server
-- IFNULL(<выражение>, <значение по умолчанию>) -- MySQL
-- COALESCE(<выражение>, <значение по умолчанию>) -- ANSI SQL (стандарт)
-- Соблюдать это условие достаточно для двух полей BIRTHDAY и UNIV_ID.
-- В качестве <значения по умолчания> используйте строку 'unknown'.

-- 1. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала один столбец типа varchar, содержащий последовательность разделенных 
--    символом ';' (точка с запятой) значений столбцов этой таблицы, и при этом 
--    текстовые значения должны отображаться прописными символами (верхний регистр), 
--    то есть быть представленными в следующем виде: 
--    1;КАБАНОВ;ВИТАЛИЙ;M;550;4;ХАРЬКОВ;01/12/1990;2.
--    ...
--    примечание: в выборку должны попасть студенты из любого города из 5 букв

select concat (ID, ';'
              ,upper (SURNAME), ';'
			  ,upper (NAME), ';'
			  ,upper (GENDER), ';'
			  ,STIPEND, ';'
			  ,COURSE 
			  ,upper (CITY), ';'
			  ,isnull(convert(nvarchar(8), BIRTHDAY, 103), '<unknown>'), ';'
			  ,isnull(convert(nvarchar(8), UNIV_ID), '<unknown>'), ';')
from STUDENTS  
where len(CITY) = 5;


-- 2. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде: 
--    В.КАБАНОВ;местожительства-ХАРЬКОВ;родился-01.12.90
--    ...
--    примечание: в выборку должны попасть студенты, фамилия которых содержит вторую
--    букву 'е' и предпоследнюю букву 'и', либо же фамилия заканчивается на 'ц'

select concat (left(NAME, 1), '.'
      ,upper (SURNAME), ';'
	  , 'местожительства-'
	  ,upper (CITY), ';'
	  ,isnull (convert(nvarchar(10), BIRTHDAY, 4), '<unknown>'))

from STUDENTS
where SURNAME like '_е%и_' or SURNAME like '%ц';


-- 3. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    т.цилюрик;местожительства-Херсон; учится на IV курсе
--    ...
--    примечание: курс указать римскими цифрами (воспользуйтесь CASE), 
--    отобрать студентов, стипендия которых кратна 200

select concat (left(lower(NAME), 1), '.'
       ,lower(SURNAME), ';'
	   ,'местожительства-'
	   ,CITY, ';'
	   , ' учится на  '
	   ,case
	 when COURSE = 1 then 'I'
	 when COURSE = 2 then 'II'
	 when COURSE = 3 then 'III'
	 when COURSE = 4 then 'IV'
	 when COURSE = 5 then 'V'
	    end
	,' курсе ')
from STUDENTS
where STIPEND % 200 = 0


-- 4. Составьте запрос для таблицы STUDENT таким образом, чтобы выборка 
--    содержала столбец в следующего вида:
--     Нина Федосеева из г.Днепр родилась в 1992 году
--     ...
--     Дмитрий Коваленко из г.Хмельницкий родился в 1993 году
--     ...
--     примечание: для всех городов, в которых более 8 букв

select concat (NAME, ' '
              ,SURNAME, ' из г. '
			  ,CITY
		      ,case GENDER
		when 'm' then ' родился в '
		when 'f' then ' родилась в '
		end
	 ,isnull (convert(nvarchar(8), year(BIRTHDAY), 101), '<unknown>')
				, '  году')

from STUDENTS
where len(CITY) > 8;

-- 5. Вывести фамилии, имена студентов и величину получаемых ими стипендий, 
--    при этом значения стипендий первокурсников должны быть увеличены на 17.5%

select SURNAME
      ,NAME
      ,
 case
     when COURSE=1 then cast ((STIPEND*1.175) as decimal (6,2))
            else STIPEND
        end 'STIPEND + 17,5% for 1 COURSE'
                         
  from STUDENTS


-- 6. Вывести наименования всех учебных заведений и их расстояния 
--    (придумать/нагуглить/взять на глаз) до Киева.

select NAME as "Наименование Университета"
    ,case NAME
	when 'БНАУ' then 70
	when 'ДПИ' then 200
	when 'ДНТУ' then 400
	when 'ЗДИА' then 260
	when 'ЛГУ' then 600
	when 'ЛПУ' then 200
	when 'ОНПУ' then 580
	when 'ТНТУ' then 390
	when 'ХАИ' then 478
	when 'ХНАДУ' then 340
	when 'ХСХА' then 300
  end

from UNIVERSITIES
where CITY <> 'Киев';


-- 7. Вывести все учебные заведения и их две последние цифры рейтинга.

select distinct NAME as "Наименование Университета"
	, RIGHT(convert(nvarchar(10), RATING), 2)			 		
from UNIVERSITIES


-- 8. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;Рейтинг относительно ДНТУ(501) +756
--    ...
--    Код-11;КНУСА-г.Киев;рейтинг относительно ДНТУ(501) -18
--    ...
--    примечание: рейтинг вычислить относительно ДНТУшного, а также должен 
--    присутствовать знак (+/-), рейтинг ДНТУ заранее известен = 501


-- 9. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;рейтинг состоит из 12 сотен
--    Код-2;КНУ-г.Киев;рейтинг состоит из 6 сотен
--    ...
--    примечание: в рейтинге необходимо указать кол-во сотен

select concat ('Код-',ID, ';'
				, NAME 
				, '-г.', CITY, ';'
				, RATING 
				, ' состоит  из  ' + convert(nvarchar(10), RATING/100) + '  сотен') 	
from UNIVERSITIES


-- 10	Получить список студентов, который содержит следующие поля
--		Фамилия студента
--		Дата рождения студента
--		Знак зодиака студента
--		информацию о знаках зодиака можно получить, например, здесь
--		http://astro101.ru/about-astrology/683-znaki-zodiaka-po-chislam-mesjacam-stihijam.html
--		для определения месяца в дате использовать функцию month(date). Например, если birthday равно '20-04-1998',
--		то  month(birthday) равно 4
--		для определения дня в дате использовать функцию day. day(birthday) равно 20
--		для значения NULL должно быть выведено значение 'Неизвестно'